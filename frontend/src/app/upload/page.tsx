'use client';

import { useState } from 'react';
import ImageUpload from '@/components/ImageUpload';
import { recipeAPI } from '@/lib/api';
import { Ingredient } from '@/types/recipe';
import { Brain, MessageSquare, Sparkles, Camera, Wand2, Star, Zap, ChefHat, Clock, Users, Calendar } from 'lucide-react';

interface GeneratedRecipe {
  name: string;
  description: string;
  ingredients: Ingredient[];
  instructions: string[];
  prep_time: number;
  cook_time: number;
  servings: number;
  difficulty: string;
}

export default function UploadPage() {
  const [generatedRecipe, setGeneratedRecipe] = useState<GeneratedRecipe | null>(null);
  const [textPrompt, setTextPrompt] = useState('');
  const [loading, setLoading] = useState(false);

  const handleRecipeGenerated = (recipe: GeneratedRecipe) => {
    setGeneratedRecipe(recipe);
  };

  const handleTextGeneration = async () => {
    if (!textPrompt.trim()) return;

    setLoading(true);
    try {
      const response = await recipeAPI.generateRecipe(textPrompt);
      setGeneratedRecipe(response.data);
    } catch (error) {
      console.error('Error generating recipe:', error);
      // Mock response for demo
      setGeneratedRecipe({
        name: textPrompt,
        description: `A delicious ${textPrompt} recipe generated by AI`,
        ingredients: [
          { name: 'Main ingredient', amount: '2', unit: 'cups' },
          { name: 'Seasoning', amount: '1', unit: 'tsp' },
          { name: 'Oil', amount: '2', unit: 'tbsp' }
        ],
        instructions: [
          'Prepare all ingredients',
          'Heat oil in a pan',
          'Cook ingredients according to recipe',
          'Season to taste and serve'
        ],
        prep_time: 15,
        cook_time: 30,
        servings: 4,
        difficulty: 'medium'
      });
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-purple-50 via-pink-50 to-orange-50">
      {/* Header Section */}
      <div className="relative overflow-hidden bg-gradient-to-r from-purple-600 via-pink-500 to-orange-500 text-white">
        <div className="absolute inset-0 bg-black/20"></div>
        <div className="absolute inset-0 bg-gradient-to-r from-purple-600/30 via-transparent to-orange-600/30"></div>
        
        <div className="relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-20">
          <div className="text-center">
            <div className="flex justify-center mb-8">
              <div className="relative">
                <div className="w-20 h-20 bg-gradient-to-r from-white/20 to-white/10 backdrop-blur-sm rounded-2xl flex items-center justify-center">
                  <Brain className="w-12 h-12 text-white" />
                </div>
                <div className="absolute -top-2 -right-2 w-8 h-8 bg-yellow-400 rounded-full flex items-center justify-center animate-pulse">
                  <Sparkles className="w-4 h-4 text-yellow-800" />
                </div>
              </div>
            </div>
            
            <h1 className="text-5xl md:text-6xl font-bold mb-6 bg-gradient-to-r from-white via-pink-100 to-orange-100 bg-clip-text text-transparent">
              AI Recipe Assistant
            </h1>
            <p className="text-xl md:text-2xl text-purple-100 max-w-4xl mx-auto leading-relaxed mb-8">
              Upload a photo of any dish or describe what you want to cook, and our AI will generate 
              a detailed recipe with ingredients and step-by-step instructions.
            </p>
            
            {/* Stats */}
            <div className="flex justify-center space-x-8 text-sm">
              <div className="flex items-center space-x-2">
                <Zap className="w-5 h-5 text-yellow-300" />
                <span className="text-purple-100">Instant Generation</span>
              </div>
              <div className="flex items-center space-x-2">
                <Star className="w-5 h-5 text-yellow-300" />
                <span className="text-purple-100">AI Powered</span>
              </div>
              <div className="flex items-center space-x-2">
                <ChefHat className="w-5 h-5 text-yellow-300" />
                <span className="text-purple-100">Chef Quality</span>
              </div>
            </div>
          </div>
        </div>
      </div>

      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16">
        {/* Feature Cards */}
        <div className="grid lg:grid-cols-2 gap-8 mb-16">
          {/* Image Upload Section */}
          <div className="group">
            <div className="bg-white/80 backdrop-blur-sm rounded-3xl shadow-2xl border border-purple-200 p-8 h-full transition-all duration-500 hover:shadow-3xl hover:-translate-y-2">
              <div className="flex items-center mb-6">
                <div className="w-12 h-12 bg-gradient-to-r from-purple-500 to-pink-500 rounded-2xl flex items-center justify-center mr-4">
                  <Camera className="w-6 h-6 text-white" />
                </div>
                <div>
                  <h2 className="text-2xl font-bold text-gray-900">Upload Food Image</h2>
                  <p className="text-purple-600 font-medium">Powered by Computer Vision</p>
                </div>
              </div>
              
              <p className="text-gray-600 mb-8 text-lg">
                Take a photo or upload an image of any dish, and our AI will identify it and 
                provide you with a complete recipe instantly.
              </p>
              
              <div className="bg-gradient-to-r from-purple-50 to-pink-50 rounded-2xl p-6 mb-6">
                <ImageUpload onRecipeGenerated={handleRecipeGenerated} />
              </div>
              
              <div className="flex items-center justify-center space-x-6 text-sm text-gray-500">
                <div className="flex items-center space-x-2">
                  <div className="w-2 h-2 bg-green-400 rounded-full"></div>
                  <span>Instant Recognition</span>
                </div>
                <div className="flex items-center space-x-2">
                  <div className="w-2 h-2 bg-blue-400 rounded-full"></div>
                  <span>Multiple Formats</span>
                </div>
                <div className="flex items-center space-x-2">
                  <div className="w-2 h-2 bg-purple-400 rounded-full"></div>
                  <span>High Accuracy</span>
                </div>
              </div>
            </div>
          </div>

          {/* Text Input Section */}
          <div className="group">
            <div className="bg-white/80 backdrop-blur-sm rounded-3xl shadow-2xl border border-orange-200 p-8 h-full transition-all duration-500 hover:shadow-3xl hover:-translate-y-2">
              <div className="flex items-center mb-6">
                <div className="w-12 h-12 bg-gradient-to-r from-orange-500 to-red-500 rounded-2xl flex items-center justify-center mr-4">
                  <Wand2 className="w-6 h-6 text-white" />
                </div>
                <div>
                  <h2 className="text-2xl font-bold text-gray-900">Describe Your Dish</h2>
                  <p className="text-orange-600 font-medium">Natural Language Processing</p>
                </div>
              </div>
              
              <p className="text-gray-600 mb-8 text-lg">
                Tell us what you want to cook, and our AI will create a personalized recipe 
                just for you with detailed instructions.
              </p>
              
              <div className="space-y-6">
                <div className="relative">
                  <textarea
                    value={textPrompt}
                    onChange={(e) => setTextPrompt(e.target.value)}
                    placeholder="e.g., 'I want to make spicy chicken curry with coconut milk and vegetables' or 'vegetarian pasta with tomatoes and fresh basil'"
                    rows={5}
                    className="w-full p-6 bg-gradient-to-r from-orange-50 to-red-50 border-2 border-orange-200 rounded-2xl focus:ring-4 focus:ring-orange-500/20 focus:border-orange-500 transition-all duration-300 resize-none text-lg"
                  />
                  <div className="absolute bottom-4 right-4 text-sm text-gray-400">
                    {textPrompt.length}/500
                  </div>
                </div>
                
                <button
                  onClick={handleTextGeneration}
                  disabled={loading || !textPrompt.trim()}
                  className="w-full bg-gradient-to-r from-orange-500 via-red-500 to-pink-500 text-white py-4 px-8 rounded-2xl hover:from-orange-600 hover:via-red-600 hover:to-pink-600 disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center space-x-3 font-semibold text-lg transition-all duration-300 shadow-lg hover:shadow-xl transform hover:-translate-y-1"
                >
                  {loading ? (
                    <>
                      <div className="animate-spin rounded-full h-6 w-6 border-2 border-white border-t-transparent"></div>
                      <span>Generating Recipe...</span>
                    </>
                  ) : (
                    <>
                      <Brain className="w-6 h-6" />
                      <span>Generate Recipe with AI</span>
                      <Sparkles className="w-5 h-5" />
                    </>
                  )}
                </button>
              </div>
              
              <div className="flex items-center justify-center space-x-6 text-sm text-gray-500 mt-6">
                <div className="flex items-center space-x-2">
                  <div className="w-2 h-2 bg-green-400 rounded-full"></div>
                  <span>Smart Suggestions</span>
                </div>
                <div className="flex items-center space-x-2">
                  <div className="w-2 h-2 bg-blue-400 rounded-full"></div>
                  <span>Custom Portions</span>
                </div>
                <div className="flex items-center space-x-2">
                  <div className="w-2 h-2 bg-purple-400 rounded-full"></div>
                  <span>Dietary Options</span>
                </div>
              </div>
            </div>
          </div>
        </div>

        {/* Generated Recipe Display */}
        {generatedRecipe && (
          <div className="bg-white/90 backdrop-blur-sm rounded-3xl shadow-2xl border border-gray-200 overflow-hidden">
            <div className="bg-gradient-to-r from-green-500 via-teal-500 to-blue-500 px-8 py-6">
              <div className="flex items-center justify-between">
                <div className="flex items-center space-x-4">
                  <div className="w-12 h-12 bg-white/20 backdrop-blur-sm rounded-2xl flex items-center justify-center">
                    <ChefHat className="w-6 h-6 text-white" />
                  </div>
                  <div>
                    <h3 className="text-2xl font-bold text-white">Generated Recipe</h3>
                    <p className="text-green-100">Created by AI Chef Assistant</p>
                  </div>
                </div>
                <div className="flex space-x-2">
                  <div className="w-3 h-3 bg-yellow-400 rounded-full animate-pulse"></div>
                  <div className="w-3 h-3 bg-green-400 rounded-full animate-pulse" style={{animationDelay: '0.2s'}}></div>
                  <div className="w-3 h-3 bg-blue-400 rounded-full animate-pulse" style={{animationDelay: '0.4s'}}></div>
                </div>
              </div>
            </div>
            
            <div className="p-8">
              <div className="border-l-4 border-gradient-to-b from-green-500 to-blue-500 pl-8 mb-8">
                <h4 className="text-3xl font-bold text-gray-900 mb-3">{generatedRecipe.name}</h4>
                <p className="text-gray-600 text-lg leading-relaxed">{generatedRecipe.description}</p>
                
                <div className="flex flex-wrap items-center gap-6 mt-6">
                  <div className="flex items-center space-x-2 bg-green-100 px-4 py-2 rounded-full">
                    <Clock className="w-4 h-4 text-green-600" />
                    <span className="text-green-800 font-medium">Prep: {generatedRecipe.prep_time}m</span>
                  </div>
                  <div className="flex items-center space-x-2 bg-blue-100 px-4 py-2 rounded-full">
                    <Clock className="w-4 h-4 text-blue-600" />
                    <span className="text-blue-800 font-medium">Cook: {generatedRecipe.cook_time}m</span>
                  </div>
                  <div className="flex items-center space-x-2 bg-purple-100 px-4 py-2 rounded-full">
                    <Users className="w-4 h-4 text-purple-600" />
                    <span className="text-purple-800 font-medium">Serves: {generatedRecipe.servings}</span>
                  </div>
                  <div className="flex items-center space-x-2 bg-orange-100 px-4 py-2 rounded-full">
                    <Star className="w-4 h-4 text-orange-600" />
                    <span className="text-orange-800 font-medium capitalize">Difficulty: {generatedRecipe.difficulty}</span>
                  </div>
                </div>
              </div>

              <div className="grid lg:grid-cols-2 gap-12">
                <div className="space-y-6">
                  <div className="flex items-center space-x-3 mb-4">
                    <div className="w-8 h-8 bg-gradient-to-r from-green-500 to-teal-500 rounded-lg flex items-center justify-center">
                      <MessageSquare className="w-4 h-4 text-white" />
                    </div>
                    <h5 className="font-bold text-xl text-gray-900">Ingredients</h5>
                  </div>
                  <div className="bg-gradient-to-br from-green-50 to-teal-50 rounded-2xl p-6">
                    <ul className="space-y-3">
                      {generatedRecipe.ingredients?.map((ingredient: Ingredient, index: number) => (
                        <li key={index} className="flex items-center group hover:bg-white/60 rounded-lg p-2 transition-all duration-200">
                          <div className="w-3 h-3 bg-gradient-to-r from-green-500 to-teal-500 rounded-full mr-4 group-hover:scale-110 transition-transform duration-200"></div>
                          <span className="text-gray-700 font-medium">
                            <span className="text-green-700 font-bold">{ingredient.amount} {ingredient.unit}</span> {ingredient.name}
                          </span>
                        </li>
                      ))}
                    </ul>
                  </div>
                </div>

                <div className="space-y-6">
                  <div className="flex items-center space-x-3 mb-4">
                    <div className="w-8 h-8 bg-gradient-to-r from-blue-500 to-purple-500 rounded-lg flex items-center justify-center">
                      <Sparkles className="w-4 h-4 text-white" />
                    </div>
                    <h5 className="font-bold text-xl text-gray-900">Instructions</h5>
                  </div>
                  <div className="bg-gradient-to-br from-blue-50 to-purple-50 rounded-2xl p-6">
                    <ol className="space-y-4">
                      {generatedRecipe.instructions?.map((instruction: string, index: number) => (
                        <li key={index} className="flex group hover:bg-white/60 rounded-lg p-3 transition-all duration-200">
                          <div className="flex-shrink-0 w-8 h-8 bg-gradient-to-r from-blue-500 to-purple-500 text-white rounded-full flex items-center justify-center text-sm font-bold mr-4 group-hover:scale-110 transition-transform duration-200">
                            {index + 1}
                          </div>
                          <span className="text-gray-700 leading-relaxed">{instruction}</span>
                        </li>
                      ))}
                    </ol>
                  </div>
                </div>
              </div>

              <div className="mt-12 flex flex-wrap gap-4">
                <button className="bg-gradient-to-r from-green-500 to-teal-500 text-white px-8 py-3 rounded-2xl hover:from-green-600 hover:to-teal-600 transition-all duration-300 font-semibold shadow-lg hover:shadow-xl transform hover:-translate-y-1 flex items-center space-x-2">
                  <Star className="w-5 h-5" />
                  <span>Save Recipe</span>
                </button>
                <button className="border-2 border-orange-500 text-orange-600 px-8 py-3 rounded-2xl hover:bg-orange-50 transition-all duration-300 font-semibold flex items-center space-x-2">
                  <Calendar className="w-5 h-5" />
                  <span>Add to Meal Plan</span>
                </button>
                <button className="border-2 border-purple-500 text-purple-600 px-8 py-3 rounded-2xl hover:bg-purple-50 transition-all duration-300 font-semibold flex items-center space-x-2">
                  <MessageSquare className="w-5 h-5" />
                  <span>Share Recipe</span>
                </button>
              </div>
            </div>
          </div>
        )}
      </div>
    </div>
  );
}