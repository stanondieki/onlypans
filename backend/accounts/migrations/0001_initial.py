# Generated by Django 5.2.3 on 2025-06-18 15:50

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("bio", models.TextField(blank=True, max_length=500)),
                (
                    "avatar",
                    models.ImageField(blank=True, null=True, upload_to="avatars/"),
                ),
                ("date_of_birth", models.DateField(blank=True, null=True)),
                (
                    "dietary_restrictions",
                    models.CharField(
                        choices=[
                            ("none", "No Restrictions"),
                            ("vegetarian", "Vegetarian"),
                            ("vegan", "Vegan"),
                            ("pescatarian", "Pescatarian"),
                            ("keto", "Ketogenic"),
                            ("paleo", "Paleo"),
                            ("gluten_free", "Gluten Free"),
                            ("dairy_free", "Dairy Free"),
                            ("low_carb", "Low Carb"),
                            ("low_fat", "Low Fat"),
                            ("diabetic", "Diabetic Friendly"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                (
                    "allergies",
                    models.TextField(blank=True, help_text="List any food allergies"),
                ),
                ("favorite_cuisines", models.JSONField(blank=True, default=list)),
                ("disliked_ingredients", models.TextField(blank=True)),
                (
                    "cooking_skill_level",
                    models.CharField(
                        choices=[
                            ("beginner", "Beginner"),
                            ("intermediate", "Intermediate"),
                            ("advanced", "Advanced"),
                            ("expert", "Expert"),
                        ],
                        default="beginner",
                        max_length=15,
                    ),
                ),
                ("preferred_meal_time", models.JSONField(blank=True, default=dict)),
                (
                    "activity_level",
                    models.CharField(
                        choices=[
                            ("sedentary", "Sedentary"),
                            ("lightly_active", "Lightly Active"),
                            ("moderately_active", "Moderately Active"),
                            ("very_active", "Very Active"),
                            ("extra_active", "Extra Active"),
                        ],
                        default="moderately_active",
                        max_length=20,
                    ),
                ),
                (
                    "weight_goal",
                    models.CharField(
                        choices=[
                            ("maintain", "Maintain Weight"),
                            ("lose", "Lose Weight"),
                            ("gain", "Gain Weight"),
                        ],
                        default="maintain",
                        max_length=15,
                    ),
                ),
                ("notifications_enabled", models.BooleanField(default=True)),
                ("meal_reminders", models.BooleanField(default=True)),
                ("shopping_reminders", models.BooleanField(default=True)),
                ("recipe_recommendations", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserPreference",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "preference_type",
                    models.CharField(
                        choices=[
                            ("ingredient", "Ingredient"),
                            ("cuisine", "Cuisine"),
                            ("dish_type", "Dish Type"),
                            ("cooking_method", "Cooking Method"),
                        ],
                        max_length=20,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("preference_score", models.FloatField(default=0.0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="preferences",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("user", "preference_type", "name")},
            },
        ),
    ]
